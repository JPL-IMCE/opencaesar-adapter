buildscript {
	repositories {
	    mavenLocal()
		jcenter()
	}
	dependencies {
		classpath 'org.xtext:xtext-gradle-plugin:1.0.21'
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
	}
}

repositories {
    mavenLocal()
    maven { url 'https://dl.bintray.com/jpl-imce/gov.nasa.jpl.imce.oml' }
    maven { url 'https://dl.bintray.com/opencaesar/oml' }
	jcenter()
}

apply plugin: 'java'
apply plugin: 'org.xtext.xtend'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'application'
apply plugin: 'java-gradle-plugin'

apply from: "${rootDir}/gradle/source-layout.gradle"
apply from: "${rootDir}/gradle/maven-deployment.gradle"

group = 'io.opencaesar.legacy'
version = '0.7.0'
mainClassName = 'io.opencaesar.legacy2oml.App'
applicationName = 'legacy2oml'
ext.title = 'Legacy to OML'

ext.versions = [
    oml: '0.7.+',
]

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

sourceSets {
	main {
		java.srcDirs = ['src/main/java']
		resources.srcDirs = ['src/main/resources']
		xtendOutputDir = 'src/main/xtend-gen'
	}
	test {
		java.srcDirs = ['src/test/java']
		resources.srcDirs = ['src/test/resources']
		xtendOutputDir = 'src/test/xtend-gen'
	}
}

sourceSets.all {
	resources.exclude '**/*.xtend', '**/*._trace'
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.beust:jcommander:1.72'
	implementation 'xml-resolver:xml-resolver:1.2'
	implementation 'org.apache.commons:commons-compress:1.1'
	implementation 'com.fasterxml.uuid:java-uuid-generator:3.2.0'
    implementation 'gov.nasa.jpl.imce.oml:gov.nasa.jpl.imce.oml.model:0.9.7.+'
    implementation 'gov.nasa.jpl.imce.oml:gov.nasa.jpl.imce.oml.dsl:0.9.7.+'
    implementation 'gov.nasa.jpl.imce.oml:gov.nasa.jpl.imce.oml.zip:0.9.7.+'
    implementation "io.opencaesar.oml:io.opencaesar.oml.dsl:${versions.oml}"

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: "file://${buildDir}/localRepo")
			snapshotRepository(url: "file://${buildDir}/localRepo")
		}
	}
}

// may be a better way to do this in gradle 5
jar {
	manifest {
		attributes 'Implementation-Title': 'Legacy OML Converter',
				'Implementation-Version': version
	}
}

task createVersion {
    doLast {
        def version = project.version.toString()
        def file = new File("$projectDir/src/main/resources/version.txt")
        file.write(version)
    }
}

classes {
    dependsOn createVersion
}

gradlePlugin {
    plugins {
        oml2OwlPlugin {
            id = 'io.opencaesar.legacy2oml'
            implementationClass = 'io.opencaesar.legacy2oml.GradlePlugin'
        }
    }
}
